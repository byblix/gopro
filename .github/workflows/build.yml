name: gopro build/test flow
on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    name: test code
    needs: build
    steps:
      - name: CI dependency

      - name: Go vet
        run: go vet cmd/gopro/main.go

      - name: Go test
        run: go test ./...

  build:
    name: build code
    needs: test
    runs-on: ubuntu-latest
    env:
      GO_VERSION: 1.13

    steps:
      - name: Checkout to master
        uses: actions/checkout@master

      - name: Set up go with version $GO_VERSION
        uses: actions/setup-go@v1
        with:
          go-version: $GO_VERSION # The Go version to download (if necessary) and use.
        id: go

      - name: Login to DockerHub registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build the Docker image
        run: |
          docker build --rm -f "Dockerfile" -t byrdapp/pro-app:dev .
          docker build --rm -f "Dockerfile" -t byrdapp/pro-app:prod .

      - name: Push the Docker image to the registry
        run: |
          docker push byrdapp/pro-app:dev
          docker push byrdapp/pro-app:prod

  deploy:
    name: deploy code
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - continue-on-error: false
      # Deploy to swarm
      # - name: Docker Swarm Deploy
      #   uses: sagebind/docker-swarm-deploy-action@1.0.0
      #   with:
      #     args: docker stack deploy -c docker-compose.yml --with-registry-auth
  # slack:
  #   - name: CI dependency
  #     needs: [build, test, deploy]
  #     - name: Notify slack
  #       env:
  #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  #       uses: pullreminders/slack-action@master
  #       with:
  #         args: '{\"channel\":\"#deployments\",\"Deployment\":\"Byrd pro app was deployed\"}'
